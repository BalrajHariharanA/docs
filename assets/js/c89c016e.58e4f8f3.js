"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[864],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(n),g=r,m=d["".concat(u,".").concat(g)]||d[g]||p[g]||l;return n?a.createElement(m,o(o({ref:t},c),{},{components:n})):a.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=g;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[d]="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},8582:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_position:5},o="FAQ and Debugging",i={unversionedId:"dusknet/cloud-rollup-deployment/faq-debugging",id:"dusknet/cloud-rollup-deployment/faq-debugging",title:"FAQ and Debugging",description:"Endpoints",source:"@site/docs/dusknet/cloud-rollup-deployment/5-faq-debugging.md",sourceDirName:"dusknet/cloud-rollup-deployment",slug:"/dusknet/cloud-rollup-deployment/faq-debugging",permalink:"/docs/dusknet/cloud-rollup-deployment/faq-debugging",draft:!1,editUrl:"https://github.com/astriaorg/docs/docs/dusknet/cloud-rollup-deployment/5-faq-debugging.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"docsSidebar",previous:{title:"AWS",permalink:"/docs/dusknet/cloud-rollup-deployment/aws"}},u={},s=[{value:"Endpoints",id:"endpoints",level:2},{value:"Manually Fetch Sequencer Block Height",id:"manually-fetch-sequencer-block-height",level:2},{value:"Install the <code>astria-cli</code>",id:"install-the-astria-cli",level:3},{value:"Sequencer Block Height",id:"sequencer-block-height",level:3},{value:"Debug Ingress",id:"debug-ingress",level:2},{value:"Verify Your Loadbalancer",id:"verify-your-loadbalancer",level:2}],c={toc:s},d="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"faq-and-debugging"},"FAQ and Debugging"),(0,r.kt)("h2",{id:"endpoints"},"Endpoints"),(0,r.kt)("p",null,"Endpoints for the remote cluster are the following:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"NAME"),(0,r.kt)("th",{parentName:"tr",align:null},"HOSTS"),(0,r.kt)("th",{parentName:"tr",align:null},"ADDRESS"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"EVM JSON RPC"),(0,r.kt)("td",{parentName:"tr",align:null},"rpc.evm.dusk-1.devnet.astria.org"),(0,r.kt)("td",{parentName:"tr",align:null},"34.160.214.22")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"EVM Block Explorer"),(0,r.kt)("td",{parentName:"tr",align:null},"explorer.evm.dusk-1.devnet.astria.org"),(0,r.kt)("td",{parentName:"tr",align:null},"34.111.167.16")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"EVM Faucet"),(0,r.kt)("td",{parentName:"tr",align:null},"faucet.evm.dusk-1.devnet.astria.org"),(0,r.kt)("td",{parentName:"tr",align:null},"130.211.4.120")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Sequencer RPC"),(0,r.kt)("td",{parentName:"tr",align:null},"rpc.sequencer.dusk-1.devnet.astria.org"),(0,r.kt)("td",{parentName:"tr",align:null},"34.111.73.187")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Sequencer Faucet"),(0,r.kt)("td",{parentName:"tr",align:null},"faucet.sequencer.dusk-1.devnet.astria.org"),(0,r.kt)("td",{parentName:"tr",align:null},"34.36.8.102")))),(0,r.kt)("h2",{id:"manually-fetch-sequencer-block-height"},"Manually Fetch Sequencer Block Height"),(0,r.kt)("h3",{id:"install-the-astria-cli"},"Install the ",(0,r.kt)("inlineCode",{parentName:"h3"},"astria-cli")),(0,r.kt)("p",null,"Pull the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/astriaorg/astria"},"Astria repo")," and install the ",(0,r.kt)("inlineCode",{parentName:"p"},"astria-cli")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone git@github.com:astriaorg/astria.git\ncd astria\njust install-cli\n")),(0,r.kt)("h3",{id:"sequencer-block-height"},"Sequencer Block Height"),(0,r.kt)("p",null,"The initial sequencer block height is automatically fetched and set if not specified when creating the config. "),(0,r.kt)("p",null,"You can manually retrieve it with the ",(0,r.kt)("inlineCode",{parentName:"p"},"astria-cli"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"astria-cli sequencer blockheight get \\\n  --sequencer-url https://rpc.sequencer.dusk-1.devnet.astria.org/\n")),(0,r.kt)("p",null,"If you need to set this to a different value you can set it as an an environment variable:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export ROLLUP_SEQUENCER_INITIAL_BLOCK_HEIGHT=<INITIAL_SEQUENCER_BLOCK_HEIGHT>\n")),(0,r.kt)("p",null,"Or use the following flag when running the ",(0,r.kt)("inlineCode",{parentName:"p"},"astria-cli rollup config create"),"\ncommand below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"--sequencer.initial-block-height <INITIAL_SEQUENCER_BLOCK_HEIGHT>\n")),(0,r.kt)("h2",{id:"debug-ingress"},"Debug Ingress"),(0,r.kt)("p",null,"If you would like to view the ingress logs you can use the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get po -n ingress-nginx\n# get the name of one of the pods\nexport INGRESS_POD_1=ingress-nginx-controller-6d6559598-ll8gv\n# view the logs\nkubectl logs $INGRESS_POD_1 -n ingress-nginx\n")),(0,r.kt)("h2",{id:"verify-your-loadbalancer"},"Verify Your Loadbalancer"),(0,r.kt)("p",null,"If you want to verify your loadbalancer with an external IP you can do the\nfollowing."),(0,r.kt)("p",null,"After you have deployed your ingress controller with ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl apply"),", run the\nfollowing command and then ",(0,r.kt)("inlineCode",{parentName:"p"},"curl")," the external IP:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get svc -n ingress-nginx\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"NAME                                 TYPE           CLUSTER-IP      EXTERNAL-IP     PORT(S)                      AGE\ningress-nginx-controller             LoadBalancer   34.118.228.98   34.42.184.206   80:31623/TCP,443:31357/TCP   57s\ningress-nginx-controller-admission   ClusterIP      34.118.229.71   <none>          443/TCP                      57s\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If you are using AWS you will be given a URL instead of an IP.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# use the EXTERNAL-IP from the result above\ncurl 34.42.184.206 \n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<html>\n<head><title>404 Not Found</title></head>\n<body>\n<center><h1>404 Not Found</h1></center>\n<hr><center>nginx</center>\n</body>\n</html>\n")))}p.isMDXComponent=!0}}]);