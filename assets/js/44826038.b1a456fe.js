"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[466],{4137:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(r),m=o,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||i;return r?n.createElement(f,a(a({ref:t},p),{},{components:r})):n.createElement(f,a({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9110:(e,t,r)=>{r.d(t,{ZP:()=>s});var n=r(7462),o=(r(7294),r(4137));const i={toc:[]},a="wrapper";function s(e){let{components:t,...r}=e;return(0,o.kt)(a,(0,n.Z)({},i,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Want your own rollup? ",(0,o.kt)("a",{parentName:"p",href:"https://deploy.astria.org/"},"Deploy it now!")),(0,o.kt)("p",{parentName:"admonition"},"To deploy your own rollup on the Astria Dusknet on your ",(0,o.kt)("strong",{parentName:"p"},"local machine"),", check out the\n",(0,o.kt)("a",{parentName:"p",href:"/docs/local-rollup/introduction/"},"instructions here"),"!"),(0,o.kt)("p",{parentName:"admonition"},"To deploy your own rollup on the Astria Dusknet ",(0,o.kt)("strong",{parentName:"p"},"remotely"),", check out the\n",(0,o.kt)("a",{parentName:"p",href:"/docs/cloud-rollup/digital-ocean/"},"instructions here"),"!")))}s.isMDXComponent=!0},8512:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var n=r(7462),o=(r(7294),r(4137)),i=r(9110);const a={sidebar_position:1},s="Introduction",c={unversionedId:"overview/introduction",id:"overview/introduction",title:"Introduction",description:"Astria is a shared sequencing network that allows many rollups to share a single",source:"@site/docs/overview/1-introduction.mdx",sourceDirName:"overview",slug:"/overview/introduction",permalink:"/docs/overview/introduction",draft:!1,editUrl:"https://github.com/astriaorg/docs/edit/main/docs/overview/1-introduction.mdx",tags:[],version:"current",lastUpdatedAt:1706829754,formattedLastUpdatedAt:"Feb 1, 2024",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",next:{title:"Why Decentralized Sequencers?",permalink:"/docs/overview/why-decentralized-sequencers"}},l={},p=[],u={toc:p},d="wrapper";function m(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction"},"Introduction"),(0,o.kt)(i.ZP,{mdxType:"DeploymentsRedirect"}),(0,o.kt)("p",null,"Astria is a shared sequencing network that allows many rollups to share a single\ndecentralized network of sequencers. These sequencers are simple and\npermissionless to join, completely replacing centralized sequencers."),(0,o.kt)("p",null,"This shared sequencer network provides out-of-the-box censorship resistance,\nfast block confirmations, and atomic cross-rollup composability \u2013 all while\nretaining each rollup\u2019s sovereignty. Astria envisions a future where thousands\nof decentralized rollups flourish, each one tailored to meet the unique\nrequirements of different industries, applications, and use cases."),(0,o.kt)("p",null,"To achieve this vision, we believe that deploying an economically secure,\ndecentralized, and censorship-resistant rollup should be as easy as deploying a\nsmart contract."),(0,o.kt)("p",null,"See the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/astriaorg/astria"},"Astria repo here.")))}m.isMDXComponent=!0}}]);