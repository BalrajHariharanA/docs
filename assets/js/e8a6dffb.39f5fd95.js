"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[724],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),g=r,k=p["".concat(s,".").concat(g)]||p[g]||d[g]||l;return n?a.createElement(k,o(o({ref:t},u),{},{components:n})):a.createElement(k,o({ref:t},u))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=g;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},1514:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_position:1},o="Digital Ocean",i={unversionedId:"dusknet/cloud-rollup-deployment/digital-ocean",id:"dusknet/cloud-rollup-deployment/digital-ocean",title:"Digital Ocean",description:"Deploy your rollup to Digital Ocean.",source:"@site/docs/dusknet/cloud-rollup-deployment/1-digital-ocean.md",sourceDirName:"dusknet/cloud-rollup-deployment",slug:"/dusknet/cloud-rollup-deployment/digital-ocean",permalink:"/docs/dusknet/cloud-rollup-deployment/digital-ocean",draft:!1,editUrl:"https://github.com/astriaorg/docs/docs/dusknet/cloud-rollup-deployment/1-digital-ocean.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Cloud Rollup Deployment",permalink:"/docs/category/cloud-rollup-deployment"},next:{title:"Azure",permalink:"/docs/dusknet/cloud-rollup-deployment/azure"}},s={},c=[{value:"Configure <code>kubectl</code> with <code>doctl</code>",id:"configure-kubectl-with-doctl",level:2},{value:"Deploy Ingress Nginx Controller",id:"deploy-ingress-nginx-controller",level:2},{value:"Verify Loadbalancer with external IP",id:"verify-loadbalancer-with-external-ip",level:2},{value:"Create an <code>A</code> Record",id:"create-an-a-record",level:2},{value:"Create your Rollup Genesis Account(s)",id:"create-your-rollup-genesis-accounts",level:2},{value:"Install the <code>astria-cli</code>",id:"install-the-astria-cli",level:2},{value:"Create Rollup Config",id:"create-rollup-config",level:2},{value:"Create new sequencer account",id:"create-new-sequencer-account",level:2},{value:"Fund your Sequencer Account",id:"fund-your-sequencer-account",level:2},{value:"Deploy the Rollup Node",id:"deploy-the-rollup-node",level:2},{value:"Watch for pod startup",id:"watch-for-pod-startup",level:2},{value:"Observe your Deployment",id:"observe-your-deployment",level:2},{value:"Use <code>cast</code> to Interact with your Rollup",id:"use-cast-to-interact-with-your-rollup",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...l}=e;return(0,r.kt)(p,(0,a.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"digital-ocean"},"Digital Ocean"),(0,r.kt)("p",null,"Deploy your rollup to Digital Ocean."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The list of local dependencies for the following instructions ",(0,r.kt)("a",{parentName:"p",href:"/docs/dusknet/overview"},"can be found here"),".")),(0,r.kt)("p",null,"The following assumes you are using ",(0,r.kt)("a",{parentName:"p",href:"https://www.digitalocean.com/products/kubernetes"},"Digital Ocean Kubernetes\n(DOKS)"),"."),(0,r.kt)("p",null,"We recommend using Digital Ocean's Kubernetes ",(0,r.kt)("a",{parentName:"p",href:"https://docs.digitalocean.com/products/kubernetes/getting-started/quickstart/"},"Quick Start Guide"),"."),(0,r.kt)("p",null,"You must also install and configure ",(0,r.kt)("inlineCode",{parentName:"p"},"doctl"),": ",(0,r.kt)("a",{parentName:"p",href:"https://docs.digitalocean.com/reference/doctl/how-to/install/"},"https://docs.digitalocean.com/reference/doctl/how-to/install/")),(0,r.kt)("h2",{id:"configure-kubectl-with-doctl"},"Configure ",(0,r.kt)("inlineCode",{parentName:"h2"},"kubectl")," with ",(0,r.kt)("inlineCode",{parentName:"h2"},"doctl")),(0,r.kt)("p",null,'In your Digital Ocean control panel, navigate to "Connecting to Kubernetes." Run the following command with the ',(0,r.kt)("inlineCode",{parentName:"p"},"magic-id"),"\ngenerated for you."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"doctl kubernetes cluster kubeconfig save <magic-id>\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"doctl screenshot",src:n(6968).Z,width:"2334",height:"1484"})),(0,r.kt)("h2",{id:"deploy-ingress-nginx-controller"},"Deploy Ingress Nginx Controller"),(0,r.kt)("p",null,"We use the Ingress NGINX Controller for consistency across deployment environments:"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.github.io/ingress-nginx/deploy/#digital-ocean"},"https://kubernetes.github.io/ingress-nginx/deploy/#digital-ocean")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.2/deploy/static/provider/do/deploy.yaml\n")),(0,r.kt)("h2",{id:"verify-loadbalancer-with-external-ip"},"Verify Loadbalancer with external IP"),(0,r.kt)("p",null,"Look for a new loadbalancer being created in the Digital Ocean console:\n",(0,r.kt)("a",{parentName:"p",href:"https://cloud.digitalocean.com/networking/load_balancers"},"https://cloud.digitalocean.com/networking/load_balancers")),(0,r.kt)("p",null,"You can also check that your Digital Ocean load balancer was created using the\nfollowing command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get svc -n ingress-nginx\n")),(0,r.kt)("p",null,"You should see something like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"NAME                                 TYPE           CLUSTER-IP      EXTERNAL-IP     PORT(S)                      AGE\ningress-nginx-controller             LoadBalancer   10.245.63.28    161.35.240.50   80:32656/TCP,443:30158/TCP   44h\ningress-nginx-controller-admission   ClusterIP      10.245.106.99   <none>          443/TCP                      44h\n")),(0,r.kt)("h2",{id:"create-an-a-record"},"Create an ",(0,r.kt)("inlineCode",{parentName:"h2"},"A")," Record"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"You must configure a DNS record because our ingress configuration uses name\nbased virtual routing.",(0,r.kt)("br",{parentName:"p"}),"\n","More info here: ",(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/services-networking/ingress/#name-based-virtual-hosting"},"https://kubernetes.io/docs/concepts/services-networking/ingress/#name-based-virtual-hosting"))),(0,r.kt)("p",null,"How you create an ",(0,r.kt)("inlineCode",{parentName:"p"},"A")," record will depend on where you purchased your domain from. Each\ndomain provider will have different steps required to set up an A record."),(0,r.kt)("p",null,"An example for Google domains can be seen here: ",(0,r.kt)("a",{parentName:"p",href:"https://support.google.com/a/answer/2579934?hl=en"},"https://support.google.com/a/answer/2579934?hl=en")),(0,r.kt)("p",null,"Create a wildcard ",(0,r.kt)("inlineCode",{parentName:"p"},"*")," record pointing to the ",(0,r.kt)("inlineCode",{parentName:"p"},"EXTERNAL-IP")," of your ",(0,r.kt)("inlineCode",{parentName:"p"},"ingress-nginx-controller"),":"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"a record screenshot",src:n(9947).Z,width:"2064",height:"798"})),(0,r.kt)("h2",{id:"create-your-rollup-genesis-accounts"},"Create your Rollup Genesis Account(s)"),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"NEVER")," use a private key you use on a live network. ")),(0,r.kt)("p",null,"You can add genesis account(s) to your rollup during configuration."),(0,r.kt)("p",null,"You can create an account using:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cast w new\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Successfully created new keypair.\nAddress:     0xfFe9...5f8b # <GENESIS_ADDRESS>\nPrivate key: 0x332e...a8fb # <GENESIS_PRIVATE_KEY>\n")),(0,r.kt)("p",null,"Export the genesis private key, this will be used by the faucet included with the rollup:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export ROLLUP_FAUCET_PRIV_KEY=<GENESIS_PRIVATE_KEY>\n")),(0,r.kt)("p",null,"Export the genesis address alongside with your desired initial balance, in Wei, we recommend using a value of ",(0,r.kt)("inlineCode",{parentName:"p"},"100000000000000000000")," or larger:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export ROLLUP_GENESIS_ACCOUNTS=<GENESIS_ADDRESS>:<BALANCE>\n")),(0,r.kt)("p",null,"You can specify multiple accounts to be funded at genesis as comma deliminated tuples of ",(0,r.kt)("inlineCode",{parentName:"p"},"<ADDRESS>:<BALANCE>")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"export ROLLUP_GENESIS_ACCOUNTS=<ADDRESS_1>:<BALANCE_1>,<ADDRESS_2>:<BALANCE_2>\n")),(0,r.kt)("h2",{id:"install-the-astria-cli"},"Install the ",(0,r.kt)("inlineCode",{parentName:"h2"},"astria-cli")),(0,r.kt)("p",null,"Pull the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/astriaorg/astria"},"Astria repo")," and install the ",(0,r.kt)("inlineCode",{parentName:"p"},"astria-cli")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone git@github.com:astriaorg/astria.git\ncd astria\njust install-cli\n")),(0,r.kt)("h2",{id:"create-rollup-config"},"Create Rollup Config"),(0,r.kt)("p",null,"Replace the tags in the commands and env vars below, as follows:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Var Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Var Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<YOUR_ROLLUP_NAME>")),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"The name of your rollup. This must be alphanumeric, ",(0,r.kt)("inlineCode",{parentName:"td"},"-")," is allowed, this will be included in URLs")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<YOUR_NETWORK_ID>")),(0,r.kt)("td",{parentName:"tr",align:null},"u64"),(0,r.kt)("td",{parentName:"tr",align:null},"The id of your network. Pick a > 6 digit number (eg. ",(0,r.kt)("inlineCode",{parentName:"td"},"123456"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<YOUR_HOSTNAME>")),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"The chosen hostname for your network (eg. ",(0,r.kt)("inlineCode",{parentName:"td"},"astria.org"),")")))),(0,r.kt)("p",null,"You can use environment variables to set the configuration for the rollup\nconfig creation. Replace all the ",(0,r.kt)("inlineCode",{parentName:"p"},"<>")," tags with their corresponding values. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export ROLLUP_NAME=<YOUR_ROLLUP_NAME>\nexport ROLLUP_NETWORK_ID=<YOUR_NETWORK_ID>\nexport ROLLUP_HOSTNAME=<YOUR_HOSTNAME>\n")),(0,r.kt)("p",null,"Run the config create command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"astria-cli rollup config create\n")),(0,r.kt)("p",null,"Export the config file name as an env vars:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export ROLLUP_CONF_FILE=$ROLLUP_NAME-rollup-conf.yaml\n")),(0,r.kt)("p",null,"Verify the config"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"cat $ROLLUP_CONF_FILE\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"namespace: astria-dev-cluster\nconfig:\n  useTTY: false\n  logLevel: debug\n  rollup:\n    name: <YOUR_ROLLUP_NAME>\n    chainId: <YOUR_ROLLUP_NAME>-chain\n    networkId: '<YOUR_NETWORK_ID>'\n    skipEmptyBlocks: false\n    genesisAccounts:\n    - address: <GENESIS_ADDRESS>\n      balance: '<BALANCE>'\n  sequencer:\n    initialBlockHeight: <INITIAL_SEQUENCER_BLOCK_HEIGHT>\n    websocket: wss://rpc.sequencer.dusk-1.devnet.astria.org/websocket\n    rpc: https://rpc.sequencer.dusk-1.devnet.astria.org\ningress:\n  hostname: <YOUR_HOSTNAME>\n")),(0,r.kt)("h2",{id:"create-new-sequencer-account"},"Create new sequencer account"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"astria-cli sequencer account create\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'Create Sequencer Account\n\nPrivate Key: "5562...1622" # <SEQUENCER_ACCOUNT_PRIV_KEY>\nPublic Key:  "ec20...f613" # \nAddress:     "8a2f...5f68" # <SEQUENCER_ACCOUNT_ADDRESS>\n')),(0,r.kt)("p",null,"Export your sequencer private key and address as environment variables:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export SEQUENCER_PRIV_KEY=9c78...710d\nexport SEQUENCER_ACCOUNT_ADDRESS=8a2f...5f68\n")),(0,r.kt)("h2",{id:"fund-your-sequencer-account"},"Fund your Sequencer Account"),(0,r.kt)("p",null,"Navigate to ",(0,r.kt)("a",{parentName:"p",href:"https://faucet.sequencer.dusk-1.devnet.astria.org/"},"https://faucet.sequencer.dusk-1.devnet.astria.org/")," to view the sequencer faucet."),(0,r.kt)("p",null,"Enter your ",(0,r.kt)("inlineCode",{parentName:"p"},"<SEQUENCER_ACCOUNT_ADDRESS>")," into the text box to send funds to your account:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Sequencer Faucet",src:n(9596).Z,width:"1490",height:"796"})),(0,r.kt)("p",null,"Verify your account received the funds"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"astria-cli sequencer balance get $SEQUENCER_ACCOUNT_ADDRESS --sequencer-url=https://rpc.sequencer.dusk-1.devnet.astria.org\n")),(0,r.kt)("h2",{id:"deploy-the-rollup-node"},"Deploy the Rollup Node"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"astria-cli")," to deploy the node."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"astria-cli rollup deployment create \\\n  --config $ROLLUP_CONF_FILE \\\n  --faucet-private-key $ROLLUP_FAUCET_PRIV_KEY \\\n  --sequencer-private-key $SEQUENCER_PRIV_KEY\n")),(0,r.kt)("h2",{id:"watch-for-pod-startup"},"Watch for pod startup"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pods -n astria-dev-cluster -w\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"NAME                                             READY   STATUS    RESTARTS      AGE\n<YOUR_ROLLUP_NAME>-blockscout-647745c66d-vz4ks   6/6     Running   1 (56s ago)   72s\n<YOUR_ROLLUP_NAME>-faucet-68667bd895-pwqmz       1/1     Running   0             72s\n<YOUR_ROLLUP_NAME>-geth-755cb8dd97-k5xp8         3/3     Running   0             72s\n")),(0,r.kt)("h2",{id:"observe-your-deployment"},"Observe your Deployment"),(0,r.kt)("p",null,"Your rollups utility endpoints are as follows:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Utility"),(0,r.kt)("th",{parentName:"tr",align:null},"URL"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Block Explorer"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"http://blockscout."},"http://blockscout."),"<YOUR_ROLLUP_NAME>.<YOUR_HOSTNAME>/")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Faucet"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"http://faucet."},"http://faucet."),"<YOUR_ROLLUP_NAME>.<YOUR_HOSTNAME>/")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"RPC"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"http://executor."},"http://executor."),"<YOUR_ROLLUP_NAME>.<YOUR_HOSTNAME>/")))),(0,r.kt)("p",null,"Open the URLs in your browser to view your running rollup."),(0,r.kt)("h2",{id:"use-cast-to-interact-with-your-rollup"},"Use ",(0,r.kt)("inlineCode",{parentName:"h2"},"cast")," to Interact with your Rollup"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export ETH_RPC_URL=http://executor.$ROLLUP_NAME.$ROLLUP_HOSTNAME/\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cast block 0\n")),(0,r.kt)("p",null,"Use an address of your choice."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export REC_ADDR=<SOME_ADDRESS>\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cast balance $REC_ADDR\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cast send $REC_ADDR --value 10000000000000000000 --private-key $ROLLUP_FAUCET_PRIV_KEY\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cast balance $REC_ADDR\n")))}d.isMDXComponent=!0},9947:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/a-record-e38adab5c0bcf1a3fd276d7191c15ab2.png"},6968:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/doctl-screenshot-eaaed84e84e1bf984ccdf233b4063fb7.png"},9596:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/sequencer-faucet-4a7e970aff2e75c2725fd745eb1014bb.png"}}]);