"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[369],{4137:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>g});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),u=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(a),m=r,g=p["".concat(i,".").concat(m)]||p[m]||d[m]||l;return a?n.createElement(g,o(o({ref:t},c),{},{components:a})):n.createElement(g,o({ref:t},c))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[p]="string"==typeof e?e:r,o[1]=s;for(var u=2;u<l;u++)o[u]=a[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},2994:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>N,frontMatter:()=>c,metadata:()=>d,toc:()=>g});var n=a(7462),r=(a(7294),a(4137)),l=a(693);const o={toc:[]},s="wrapper";function i(e){let{components:t,...a}=e;return(0,r.kt)(s,(0,n.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(l.ZP,{mdxType:"CLI"}),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"kubectl - ",(0,r.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/tasks/tools/"},"https://kubernetes.io/docs/tasks/tools/")),(0,r.kt)("li",{parentName:"ul"},"helm - ",(0,r.kt)("a",{parentName:"li",href:"https://helm.sh/docs/intro/install/"},"https://helm.sh/docs/intro/install/"))))}i.isMDXComponent=!0;var u=a(5253);const c={sidebar_position:1},p="Digital Ocean",d={unversionedId:"cloud-rollup/digital-ocean",id:"cloud-rollup/digital-ocean",title:"Digital Ocean",description:"This guide will walk you through deploying a rollup full node on",source:"@site/docs/cloud-rollup/digital-ocean.mdx",sourceDirName:"cloud-rollup",slug:"/cloud-rollup/digital-ocean",permalink:"/docs/cloud-rollup/digital-ocean",draft:!1,editUrl:"https://github.com/astriaorg/docs/edit/main/docs/cloud-rollup/digital-ocean.mdx",tags:[],version:"current",lastUpdatedAt:1706829754,formattedLastUpdatedAt:"Feb 1, 2024",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Deploy a Cloud Rollup",permalink:"/docs/category/deploy-a-cloud-rollup"},next:{title:"Astria EVM",permalink:"/docs/astria-evm/overview"}},m={},g=[{value:"Local Dependencies",id:"local-dependencies",level:2},{value:"Install the latest Astria cli",id:"install-the-latest-astria-cli",level:3},{value:"Dusknet Endpoints",id:"dusknet-endpoints",level:2},{value:"Create a New Cluster",id:"create-a-new-cluster",level:2},{value:"Configure <code>kubectl</code> with <code>doctl</code>",id:"configure-kubectl-with-doctl",level:2},{value:"Deploy Ingress Nginx Controller",id:"deploy-ingress-nginx-controller",level:2},{value:"Verify Loadbalancer with external IP",id:"verify-loadbalancer-with-external-ip",level:2},{value:"Create an <code>A</code> Record",id:"create-an-a-record",level:2},{value:"Create your Rollup Genesis Account(s)",id:"create-your-rollup-genesis-accounts",level:2},{value:"Create Rollup Config",id:"create-rollup-config",level:2},{value:"Create new sequencer account",id:"create-new-sequencer-account",level:2},{value:"Fund your Sequencer Account",id:"fund-your-sequencer-account",level:2},{value:"Deploy the Rollup Node",id:"deploy-the-rollup-node",level:2},{value:"Watch for rollup startup",id:"watch-for-rollup-startup",level:2},{value:"Your Rollup Endpoints",id:"your-rollup-endpoints",level:2},{value:"Interact with your Rollup",id:"interact-with-your-rollup",level:2}],k={toc:g},h="wrapper";function N(e){let{components:t,...l}=e;return(0,r.kt)(h,(0,n.Z)({},k,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"digital-ocean"},"Digital Ocean"),(0,r.kt)("p",null,"This guide will walk you through deploying a rollup full node on\na Kubernetes cluster on Digital Ocean which uses the Astria shared sequencer network."),(0,r.kt)("h2",{id:"local-dependencies"},"Local Dependencies"),(0,r.kt)("h3",{id:"install-the-latest-astria-cli"},"Install the latest Astria cli"),(0,r.kt)(i,{mdxType:"RemoteCli"}),(0,r.kt)("h2",{id:"dusknet-endpoints"},"Dusknet Endpoints"),(0,r.kt)(u.ZP,{mdxType:"RemoteEndpoints"}),(0,r.kt)("h2",{id:"create-a-new-cluster"},"Create a New Cluster"),(0,r.kt)("p",null,"This guide assumes you're using Digital Ocean's Kubernetes (K8s) service."),(0,r.kt)("p",null,"Install and configure ",(0,r.kt)("inlineCode",{parentName:"p"},"doctl"),": ",(0,r.kt)("a",{parentName:"p",href:"https://docs.digitalocean.com/reference/doctl/how-to/install/"},"https://docs.digitalocean.com/reference/doctl/how-to/install/")),(0,r.kt)("p",null,"Follow the instructions in Digital Ocean's ",(0,r.kt)("a",{parentName:"p",href:"https://docs.digitalocean.com/products/kubernetes/getting-started/"},"Quick Start Guide"),"\nto create a new cluster in the region of your choosing."),(0,r.kt)("h2",{id:"configure-kubectl-with-doctl"},"Configure ",(0,r.kt)("inlineCode",{parentName:"h2"},"kubectl")," with ",(0,r.kt)("inlineCode",{parentName:"h2"},"doctl")),(0,r.kt)("p",null,"Once your k8s cluster is created configure ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"doctl screenshot",src:a(2190).Z,width:"2460",height:"1574"})),(0,r.kt)("h2",{id:"deploy-ingress-nginx-controller"},"Deploy Ingress Nginx Controller"),(0,r.kt)("p",null,"We use the Nginx Ingress Controller, documentation can be found ",(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.github.io/ingress-nginx/deploy/#digital-ocean/"},"here")),(0,r.kt)("p",null,"To install it run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.2/deploy/static/provider/do/deploy.yaml\n")),(0,r.kt)("p",null,"This will create several Kubernetes (k8s) resources and a Digital Ocean loadbalancer."),(0,r.kt)("h2",{id:"verify-loadbalancer-with-external-ip"},"Verify Loadbalancer with external IP"),(0,r.kt)("p",null,"You should see a new loadbalancer being created in the Digital Ocean console: ",(0,r.kt)("a",{parentName:"p",href:"https://cloud.digitalocean.com/networking/load_balancers"},"https://cloud.digitalocean.com/networking/load_balancers")),(0,r.kt)("p",null,"You can also check that your Digital Ocean load balancer was created with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get svc -n ingress-nginx\n")),(0,r.kt)("p",null,"It may take a few minutes for the ",(0,r.kt)("inlineCode",{parentName:"p"},"EXTERNAL-IP")," field to be populated,\nyou should eventually see something like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"NAME                                 TYPE           CLUSTER-IP      EXTERNAL-IP     PORT(S)                      AGE\ningress-nginx-controller             LoadBalancer   10.245.63.28    161.35.240.50   80:32656/TCP,443:30158/TCP   44h\ningress-nginx-controller-admission   ClusterIP      10.245.106.99   <none>          443/TCP                      44h\n")),(0,r.kt)("h2",{id:"create-an-a-record"},"Create an ",(0,r.kt)("inlineCode",{parentName:"h2"},"A")," Record"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"You must configure a DNS record because our ingress configuration uses name\nbased virtual routing.  "),(0,r.kt)("p",{parentName:"admonition"},"More info can be found ",(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/services-networking/ingress/#name-based-virtual-hosting"},"here"))),(0,r.kt)("p",null,"How you create an ",(0,r.kt)("inlineCode",{parentName:"p"},"A")," record will depend on where you manage your domain."),(0,r.kt)("p",null,"An example for Google domains can be seen here: ",(0,r.kt)("a",{parentName:"p",href:"https://support.google.com/a/answer/2579934?hl=en"},"https://support.google.com/a/answer/2579934?hl=en")),(0,r.kt)("p",null,"Create a wildcard record ",(0,r.kt)("inlineCode",{parentName:"p"},"*")," pointing to the ",(0,r.kt)("inlineCode",{parentName:"p"},"EXTERNAL-IP")," of your ",(0,r.kt)("inlineCode",{parentName:"p"},"ingress-nginx-controller"),":"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"a record screenshot",src:a(4172).Z,width:"2064",height:"798"})),(0,r.kt)("h2",{id:"create-your-rollup-genesis-accounts"},"Create your Rollup Genesis Account(s)"),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"NEVER")," use a private key you use on a live network.")),(0,r.kt)("p",null,"Specify the accounts which will be funded at the genesis block of your EVM rollup."),(0,r.kt)("p",null,"You can create an account using:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cast w new\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Successfully created new keypair.\nAddress:     0xfFe9...5f8b # <GENESIS_ADDRESS>\nPrivate key: 0x332e...a8fb # <GENESIS_PRIVATE_KEY>\n")),(0,r.kt)("p",null,"Export the genesis private key,\nthis will be used by the faucet included with the rollup:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export ROLLUP_FAUCET_PRIV_KEY=<GENESIS_PRIVATE_KEY>\n")),(0,r.kt)("p",null,"Export the genesis address alongside with your desired initial balance in Wei.",(0,r.kt)("br",{parentName:"p"}),"\n","We recommend using a value of ",(0,r.kt)("inlineCode",{parentName:"p"},"100000000000000000000")," or larger:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export ROLLUP_GENESIS_ACCOUNTS=<GENESIS_ADDRESS>:<BALANCE>\n")),(0,r.kt)("p",null,"You can specify multiple accounts to be funded at genesis as\ncomma deliminated tuples of ",(0,r.kt)("inlineCode",{parentName:"p"},"<ADDRESS>:<BALANCE>")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export ROLLUP_GENESIS_ACCOUNTS=<ADDRESS_1>:<BALANCE_1>,<ADDRESS_2>:<BALANCE_2>\n")),(0,r.kt)("h2",{id:"create-rollup-config"},"Create Rollup Config"),(0,r.kt)("p",null,"Create the configuration manifest for your rollup."),(0,r.kt)("p",null,"Replace the tags in the commands and env vars below, as follows:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Var Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Var Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<YOUR_ROLLUP_NAME>")),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"The name of your rollup. This must be alphanumeric, ",(0,r.kt)("inlineCode",{parentName:"td"},"-")," is allowed, this will be included in URLs")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<YOUR_NETWORK_ID>")),(0,r.kt)("td",{parentName:"tr",align:null},"u64"),(0,r.kt)("td",{parentName:"tr",align:null},"The id of your network. Pick a > 6 digit number (eg. ",(0,r.kt)("inlineCode",{parentName:"td"},"123456"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<YOUR_HOSTNAME>")),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"The chosen hostname for your network (eg. ",(0,r.kt)("inlineCode",{parentName:"td"},"astria.org"),")")))),(0,r.kt)("p",null,"You can use environment variables to set the configuration for the rollup\nconfig creation. Replace all the ",(0,r.kt)("inlineCode",{parentName:"p"},"<>")," tags with their corresponding values."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export ROLLUP_NAME=<YOUR_ROLLUP_NAME>\nexport ROLLUP_NETWORK_ID=<YOUR_NETWORK_ID>\nexport ROLLUP_HOSTNAME=<YOUR_HOSTNAME>\n")),(0,r.kt)("p",null,"Run the config create command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"astria-cli rollup config create\n")),(0,r.kt)("p",null,"Export the config file name as an env vars:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export ROLLUP_CONF_FILE=$ROLLUP_NAME-rollup-conf.yaml\n")),(0,r.kt)("p",null,"Verify the config"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cat $ROLLUP_CONF_FILE\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"global:\n  namespace: astria-dev-cluster\n  useTTY: false\n  logLevel: debug\nconfig:\n  rollup:\n    name: <YOUR_ROLLUP_NAME>\n    chainId: <YOUR_ROLLUP_NAME>-chain\n    networkId: '<YOUR_NETWORK_ID>'\n    genesisAccounts:\n    - address: <GENESIS_ADDRESS>\n      balance: '<BALANCE>'\n  sequencer:\n    initialBlockHeight: <INITIAL_SEQUENCER_BLOCK_HEIGHT>\n    websocket: wss://rpc.sequencer.dusk-3.devnet.astria.org/websocket\n    rpc: https://rpc.sequencer.dusk-3.devnet.astria.org\ningress:\n  hostname: <YOUR_HOSTNAME>\ncelestia-node:\n  config:\n    labelPrefix: <YOUR_ROLLUP_NAME>\n")),(0,r.kt)("h2",{id:"create-new-sequencer-account"},"Create new sequencer account"),(0,r.kt)("p",null,"Create an account on the Astria shared sequencer network\nfor your rollup to submit transactions."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"astria-cli sequencer account create\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'Create Sequencer Account\n\nPrivate Key: "5562...1622" # <SEQUENCER_ACCOUNT_PRIV_KEY>\nPublic Key:  "ec20...f613" # \nAddress:     "8a2f...5f68" # <SEQUENCER_ACCOUNT_ADDRESS>\n')),(0,r.kt)("p",null,"Export your sequencer private key and address as environment variables:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export SEQUENCER_PRIV_KEY=5562...1622\nexport SEQUENCER_ACCOUNT_ADDRESS=8a2f...5f68\n")),(0,r.kt)("h2",{id:"fund-your-sequencer-account"},"Fund your Sequencer Account"),(0,r.kt)("p",null,"Navigate to ",(0,r.kt)("a",{parentName:"p",href:"https://faucet.sequencer.dusk-3.devnet.astria.org/"},"https://faucet.sequencer.dusk-3.devnet.astria.org/"),"\nto view the sequencer faucet."),(0,r.kt)("p",null,"Enter your ",(0,r.kt)("inlineCode",{parentName:"p"},"<SEQUENCER_ACCOUNT_ADDRESS>")," into the text box\nto send funds to your account:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Sequencer Faucet",src:a(6605).Z,width:"819",height:"448"})),(0,r.kt)("p",null,"Verify your account received the funds"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"astria-cli sequencer account balance $SEQUENCER_ACCOUNT_ADDRESS\n")),(0,r.kt)("h2",{id:"deploy-the-rollup-node"},"Deploy the Rollup Node"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"astria-cli")," to deploy the rollup node"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"astria-cli rollup deployment create \\\n  --config $ROLLUP_CONF_FILE \\\n  --faucet-private-key $ROLLUP_FAUCET_PRIV_KEY \\\n  --sequencer-private-key $SEQUENCER_PRIV_KEY\n")),(0,r.kt)("h2",{id:"watch-for-rollup-startup"},"Watch for rollup startup"),(0,r.kt)("p",null,"You can watch for the Kubernetes pods of the rollup to start with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pods -n astria-dev-cluster -w\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"NAME                                               READY   STATUS    RESTARTS      AGE\n<YOUR_ROLLUP_NAME>-blockscout-647745c66d-vz4ks     6/6     Running   1 (56s ago)   72s\n<YOUR_ROLLUP_NAME>-celestia-node-light-mocha-4-0   2/2     Running   1 (56s ago)   72s\n<YOUR_ROLLUP_NAME>-faucet-68667bd895-pwqmz         1/1     Running   0             72s\n<YOUR_ROLLUP_NAME>-geth-755cb8dd97-k5xp8           3/3     Running   0             72s\n")),(0,r.kt)("h2",{id:"your-rollup-endpoints"},"Your Rollup Endpoints"),(0,r.kt)("p",null,"Your rollup will automatically be configured with\nseveral public endpoints using the DNS you configured:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Utility"),(0,r.kt)("th",{parentName:"tr",align:null},"URL"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Block Explorer"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"http://blockscout.<YOUR_ROLLUP_NAME>.<YOUR_HOSTNAME>/"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Faucet"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"http://faucet.<YOUR_ROLLUP_NAME>.<YOUR_HOSTNAME>/"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"RPC"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"http://executor.<YOUR_ROLLUP_NAME>.<YOUR_HOSTNAME>/"))))),(0,r.kt)("h2",{id:"interact-with-your-rollup"},"Interact with your Rollup"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export ETH_RPC_URL=http://executor.$ROLLUP_NAME.$ROLLUP_HOSTNAME/\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cast block 0\n")),(0,r.kt)("p",null,"Use an address of your choice."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export REC_ADDR=<SOME_ADDRESS>\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cast balance $REC_ADDR\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cast send $REC_ADDR --value 10000000000000000000 --private-key $ROLLUP_FAUCET_PRIV_KEY\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cast balance $REC_ADDR\n")))}N.isMDXComponent=!0},693:(e,t,a)=>{a.d(t,{ZP:()=>O});var n=a(7462),r=a(7294),l=a(4137),o=a(6010),s=a(2957),i=a(6550),u=a(5238),c=a(3609),p=a(2560);function d(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function m(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??d(a);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function g(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function k(e){let{queryString:t=!1,groupId:a}=e;const n=(0,i.k6)(),l=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,u._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(n.location.search);t.set(l,e),n.replace({...n.location,search:t.toString()})}),[l,n])]}function h(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,l=m(e),[o,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!g({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:l}))),[i,u]=k({queryString:a,groupId:n}),[c,d]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,l]=(0,p.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:n}),h=(()=>{const e=i??c;return g({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{h&&s(h)}),[h]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!g({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),d(e)}),[u,d,l]),tabValues:l}}var N=a(1048);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function f(e){let{className:t,block:a,selectedValue:l,selectValue:i,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,s.o5)(),d=e=>{const t=e.currentTarget,a=c.indexOf(t),n=u[a].value;n!==l&&(p(t),i(n))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;t=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;t=c[a]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:s}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:d},s,{className:(0,o.Z)("tabs__item",b.tabItem,s?.className,{"tabs__item--active":l===t})}),a??t)})))}function y(e){let{lazy:t,children:a,selectedValue:n}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function v(e){const t=h(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",b.tabList)},r.createElement(f,(0,n.Z)({},e,t)),r.createElement(y,(0,n.Z)({},e,t)))}function E(e){const t=(0,N.Z)();return r.createElement(v,(0,n.Z)({key:String(t)},e))}const R={tabItem:"tabItem_Ymn6"};function w(e){let{children:t,hidden:a,className:n}=e;return r.createElement("div",{role:"tabpanel",className:(0,o.Z)(R.tabItem,n),hidden:a},t)}const _={toc:[{value:"Clone the Astria dev-cluster",id:"clone-the-astria-dev-cluster",level:3},{value:"Install the latest astria cli",id:"install-the-latest-astria-cli",level:3}]},C="wrapper";function O(e){let{components:t,...a}=e;return(0,l.kt)(C,(0,n.Z)({},_,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h3",{id:"clone-the-astria-dev-cluster"},"Clone the Astria ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/astriaorg/dev-cluster/tree/main"},"dev-cluster")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git clone --branch dusk-3 https://github.com/astriaorg/dev-cluster.git\n")),(0,l.kt)("h3",{id:"install-the-latest-astria-cli"},"Install the latest ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/astriaorg/astria/releases/tag/cli-v0.2.2"},"astria cli")),(0,l.kt)(E,{mdxType:"Tabs"},(0,l.kt)(w,{value:"ARM Mac",label:"ARM Mac",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"curl -L https://github.com/astriaorg/astria/releases/download/cli-v0.3.1/astria-cli-aarch64-apple-darwin.tar.gz > astria-cli.tar.gz\ntar -xvzf astria-cli.tar.gz\n"))),(0,l.kt)(w,{value:"X86_64 Mac",label:"X86_64 Mac",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"curl -L https://github.com/astriaorg/astria/releases/download/cli-v0.3.1/astria-cli-x86_64-apple-darwin.tar.gz > astria-cli.tar.gz\ntar -xvzf astria-cli.tar.gz\n"))),(0,l.kt)(w,{value:"x86_64 Linux",label:"x86_64 Linux",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"curl -L https://github.com/astriaorg/astria/releases/download/cli-v0.3.1/astria-cli-x86_64-unknown-linux-gnu.tar.gz > astria-cli.tar.gz\ntar -xvzf astria-cli.tar.gz\n"))),(0,l.kt)(w,{value:"From Source",label:"From Source",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cargo install astria-cli --git=https://github.com/astriaorg/astria --tag=cli-v0.3.1 --locked\n")))),(0,l.kt)("p",null,"You'll also need to install the following tools:"),(0,l.kt)("admonition",{type:"warning"},(0,l.kt)("p",{parentName:"admonition"},"There is a bug in the latest Docker desktop release for MacOS",(0,l.kt)("br",{parentName:"p"}),"\n","Please install the following release: ",(0,l.kt)("a",{parentName:"p",href:"https://docs.docker.com/desktop/release-notes/#4252"},"https://docs.docker.com/desktop/release-notes/#4252"),(0,l.kt)("br",{parentName:"p"}),"\n","For more details see ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/docker/for-mac/issues/7100"},"here"))))}O.isMDXComponent=!0},5253:(e,t,a)=>{a.d(t,{ZP:()=>s});var n=a(7462),r=(a(7294),a(4137));const l={toc:[]},o="wrapper";function s(e){let{components:t,...a}=e;return(0,r.kt)(o,(0,n.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The endpoints for the remote shared sequencer are:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"NAME"),(0,r.kt)("th",{parentName:"tr",align:null},"HOSTS"),(0,r.kt)("th",{parentName:"tr",align:null},"ADDRESS"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Sequencer RPC"),(0,r.kt)("td",{parentName:"tr",align:null},"rpc.sequencer.dusk-3.devnet.astria.org"),(0,r.kt)("td",{parentName:"tr",align:null},"34.111.73.187")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Sequencer Faucet"),(0,r.kt)("td",{parentName:"tr",align:null},"faucet.sequencer.dusk-3.devnet.astria.org"),(0,r.kt)("td",{parentName:"tr",align:null},"34.36.8.102")))))}s.isMDXComponent=!0},4172:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/a-record-e38adab5c0bcf1a3fd276d7191c15ab2.png"},2190:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/do-setup-93319e676eb4169991c600ba1e56c125.png"},6605:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/sequencer-faucet-f756cc1d0101c1d63a5ef69a286596a9.png"}}]);