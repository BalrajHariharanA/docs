"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[528],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},i="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),i=c(n),m=r,k=i["".concat(s,".").concat(m)]||i[m]||d[m]||l;return n?a.createElement(k,o(o({ref:t},p),{},{components:n})):a.createElement(k,o({ref:t},p))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=m;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u[i]="string"==typeof e?e:r,o[1]=u;for(var c=2;c<l;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8594:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>u,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_position:2},o="Local Rollup Deployment",u={unversionedId:"dusknet/local-rollup-deployment",id:"dusknet/local-rollup-deployment",title:"Local Rollup Deployment",description:"Setup Local Environment",source:"@site/docs/dusknet/2-local-rollup-deployment.md",sourceDirName:"dusknet",slug:"/dusknet/local-rollup-deployment",permalink:"/docs/dusknet/local-rollup-deployment",draft:!1,editUrl:"https://github.com/astriaorg/docs/docs/dusknet/2-local-rollup-deployment.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Overview",permalink:"/docs/dusknet/overview"},next:{title:"Cloud Rollup Deployment",permalink:"/docs/category/cloud-rollup-deployment"}},s={},c=[{value:"Setup Local Environment",id:"setup-local-environment",level:2},{value:"Create your Rollup Genesis Account(s)",id:"create-your-rollup-genesis-accounts",level:2},{value:"Create Rollup Config",id:"create-rollup-config",level:2},{value:"Create a New Sequencer Account",id:"create-a-new-sequencer-account",level:2},{value:"Fund your Sequencer Account",id:"fund-your-sequencer-account",level:2},{value:"Deploy the Configuration",id:"deploy-the-configuration",level:2},{value:"Watch for pod startup",id:"watch-for-pod-startup",level:2},{value:"Observe your Deployment",id:"observe-your-deployment",level:2},{value:"Use <code>cast</code> to Interact with your Rollup",id:"use-cast-to-interact-with-your-rollup",level:2}],p={toc:c},i="wrapper";function d(e){let{components:t,...l}=e;return(0,r.kt)(i,(0,a.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"local-rollup-deployment"},"Local Rollup Deployment"),(0,r.kt)("h2",{id:"setup-local-environment"},"Setup Local Environment"),(0,r.kt)("p",null,"We use part of the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/astriaorg/dev-cluster"},"Astria\ndev-cluster")," to setup a local\nKubernetes (k8s) cluster where we will deploy our local rollup."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Make sure that Docker is running before continuing.")),(0,r.kt)("p",null,"In the ",(0,r.kt)("strong",{parentName:"p"},"dev-cluster repo"),", run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"just create-cluster\njust deploy-ingress-controller\n")),(0,r.kt)("p",null,"This gives us a local environment compatible with our helm charts."),(0,r.kt)("h2",{id:"create-your-rollup-genesis-accounts"},"Create your Rollup Genesis Account(s)"),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"NEVER")," use a private key you use on a live network.")),(0,r.kt)("p",null,"You can add genesis account(s) to your rollup during configuration."),(0,r.kt)("p",null,"You can create an account using:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cast w new\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Successfully created new keypair.\nAddress:     0xfFe9...5f8b # <GENESIS_ADDRESS>\nPrivate key: 0x332e...a8fb # <GENESIS_PRIVATE_KEY>\n")),(0,r.kt)("p",null,"Export the genesis private key, this will be used by the\nfaucet included with the rollup:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export ROLLUP_FAUCET_PRIV_KEY=<GENESIS_PRIVATE_KEY>\n")),(0,r.kt)("p",null,"Export the genesis address alongside with your desired initial balance,\nin Wei, we recommend using a value of ",(0,r.kt)("inlineCode",{parentName:"p"},"100000000000000000000")," or larger:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export ROLLUP_GENESIS_ACCOUNTS=<GENESIS_ADDRESS>:<BALANCE>\n")),(0,r.kt)("p",null,"You can specify multiple accounts to be funded at\ngenesis as comma deliminated tuples of ",(0,r.kt)("inlineCode",{parentName:"p"},"<ADDRESS>:<BALANCE>")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export ROLLUP_GENESIS_ACCOUNTS=<ADDRESS_1>:<BALANCE_1>,<ADDRESS_2>:<BALANCE_2>\n")),(0,r.kt)("h2",{id:"create-rollup-config"},"Create Rollup Config"),(0,r.kt)("p",null,"Replace the tags in the commands and env vars below, as follows:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Var Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Var Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<YOUR_ROLLUP_NAME>")),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"The name of your rollup. This must be lowercase alphanumeric, ",(0,r.kt)("inlineCode",{parentName:"td"},"-")," is allowed, this will be included in your rollup's URLs.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<YOUR_NETWORK_ID>")),(0,r.kt)("td",{parentName:"tr",align:null},"u64"),(0,r.kt)("td",{parentName:"tr",align:null},"The id of your network. You must select an id that has not already been claimed. You can view claimed chain IDs ",(0,r.kt)("a",{parentName:"td",href:"https://chainlist.org/"},"here"),".")))),(0,r.kt)("p",null,"You can use environment variables to set the configuration for the rollup\nconfig creation. Replace all the ",(0,r.kt)("inlineCode",{parentName:"p"},"<>")," tags with their corresponding values."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export ROLLUP_NAME=<YOUR_ROLLUP_NAME>\nexport ROLLUP_NETWORK_ID=<YOUR_NETWORK_ID>\n")),(0,r.kt)("p",null,"Run the config create command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"astria-cli rollup config create\n")),(0,r.kt)("p",null,"Export the config file name as an env vars:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export ROLLUP_CONF_FILE=$ROLLUP_NAME-rollup-conf.yaml\n")),(0,r.kt)("p",null,"Verify the config"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"cat $ROLLUP_CONF_FILE\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"namespace: astria-dev-cluster\nconfig:\n  useTTY: false\n  logLevel: debug\n  rollup:\n    name: <YOUR_ROLLUP_NAME>\n    chainId: <YOUR_ROLLUP_NAME>-chain\n    networkId: '<YOUR_NETWORK_ID>'\n    skipEmptyBlocks: false\n    genesisAccounts:\n    - address: <GENESIS_ADDRESS>\n      balance: '<BALANCE>'\n  sequencer:\n    initialBlockHeight: <INITIAL_SEQUENCER_BLOCK_HEIGHT>\n    websocket: wss://rpc.sequencer.dusk-1.devnet.astria.org/websocket\n    rpc: https://rpc.sequencer.dusk-1.devnet.astria.org\n  ingress:\n    hostname: localdev.me\n")),(0,r.kt)("h2",{id:"create-a-new-sequencer-account"},"Create a New Sequencer Account"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"astria-cli sequencer account create\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'Create Sequencer Account\n\nPrivate Key: "5562...1622" # <SEQUENCER_ACCOUNT_PRIV_KEY>\nPublic Key:  "ec20...f613" # \nAddress:     "8a2f...5f68" # <SEQUENCER_ACCOUNT_ADDRESS>\n')),(0,r.kt)("p",null,"Export your sequencer private key and address as environment variables:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export SEQUENCER_PRIV_KEY=9c78...710d\nexport SEQUENCER_ACCOUNT_ADDRESS=8a2f...5f68\n")),(0,r.kt)("h2",{id:"fund-your-sequencer-account"},"Fund your Sequencer Account"),(0,r.kt)("p",null,"Navigate to ",(0,r.kt)("a",{parentName:"p",href:"https://faucet.sequencer.dusk-1.devnet.astria.org/"},"https://faucet.sequencer.dusk-1.devnet.astria.org/")," to view the\nsequencer faucet."),(0,r.kt)("p",null,"Enter your ",(0,r.kt)("inlineCode",{parentName:"p"},"<SEQUENCER_ACCOUNT_ADDRESS>")," into the text box to send\nfunds to your account:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Sequencer Faucet",src:n(9596).Z,width:"1490",height:"796"})),(0,r.kt)("p",null,"Verify your account received the funds"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"astria-cli sequencer balance get $SEQUENCER_ACCOUNT_ADDRESS --sequencer-url=https://rpc.sequencer.dusk-1.devnet.astria.org\n")),(0,r.kt)("h2",{id:"deploy-the-configuration"},"Deploy the Configuration"),(0,r.kt)("p",null,"Then deploy the configuration with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"astria-cli rollup deployment create \\\n  --config $ROLLUP_CONF_FILE \\\n  --faucet-private-key $ROLLUP_FAUCET_PRIV_KEY \\\n  --sequencer-private-key $SEQUENCER_PRIV_KEY\n")),(0,r.kt)("h2",{id:"watch-for-pod-startup"},"Watch for pod startup"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pods -n astria-dev-cluster -w\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"NAME                                             READY   STATUS    RESTARTS      AGE\n<YOUR_ROLLUP_NAME>-blockscout-647745c66d-vz4ks   6/6     Running   1 (56s ago)   72s\n<YOUR_ROLLUP_NAME>-faucet-68667bd895-pwqmz       1/1     Running   0             72s\n<YOUR_ROLLUP_NAME>-geth-755cb8dd97-k5xp8         3/3     Running   0             72s\n")),(0,r.kt)("h2",{id:"observe-your-deployment"},"Observe your Deployment"),(0,r.kt)("p",null,"Your rollups utility endpoints are as follows:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Utility"),(0,r.kt)("th",{parentName:"tr",align:null},"URL"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Block Explorer"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"http://blockscout.<YOUR_ROLLUP_NAME>.localdev.me/"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Faucet"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"http://faucet.<YOUR_ROLLUP_NAME>.localdev.me/"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"RPC"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"http://executor.<YOUR_ROLLUP_NAME>.localdev.me/"))))),(0,r.kt)("p",null,"Open the URLs in your browser to view your running rollup."),(0,r.kt)("p",null,"You can also open the Block Explorer in a new browser window to see the faucet\ntransaction appear, or any of the transactions you have sent using ",(0,r.kt)("inlineCode",{parentName:"p"},"cast"),"."),(0,r.kt)("h2",{id:"use-cast-to-interact-with-your-rollup"},"Use ",(0,r.kt)("inlineCode",{parentName:"h2"},"cast")," to Interact with your Rollup"),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"cast")," to view the blocks on your rollup."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# set the Eth RPC url to point at your rollup\nexport ETH_RPC_URL=http://executor.$ROLLUP_NAME.localdev.me/\ncast block 0\n")),(0,r.kt)("p",null,"Which should print something like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"baseFeePerGas        1000000000\ndifficulty           10000000\nextraData            0x\ngasLimit             8000000\ngasUsed              0\nhash                 0xa2d5f000ef275b5f6ce6af5a0de50c17e5893c5ea664b77f534eb62f317caff1\nlogsBloom            0xnminer                0x0000000000000000000000000000000000000000\nmixHash              0x0000000000000000000000000000000000000000000000000000000000000000\nnonce                0x0000000000000000\nnumber               0\nparentHash           0x0000000000000000000000000000000000000000000000000000000000000000\nreceiptsRoot         0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\nsealFields           []\nsha3Uncles           0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\nsize                 512\nstateRoot            0xc1a913facf57b18de72d25155293c53b2a463d93a1de735269410b8663f2efca\ntimestamp            0\nwithdrawalsRoot\ntotalDifficulty      10000000\ntransactions:        []\n")),(0,r.kt)("p",null,"If you have an address you would like to deposit funds to, export that address\nto the env vars:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export REC_ADDR=<ADDRESS>\n")),(0,r.kt)("p",null,"You can also use ",(0,r.kt)("inlineCode",{parentName:"p"},"cast")," to view your balance:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cast balance $REC_ADDR\n")),(0,r.kt)("p",null,"Send an ammount to your address:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cast send $REC_ADDR --value 10000000000000000000 --private-key $ROLLUP_FAUCET_PRIV_KEY\n")),(0,r.kt)("p",null,"And view your new balance:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cast balance $REC_ADDR\n")))}d.isMDXComponent=!0},9596:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/sequencer-faucet-4a7e970aff2e75c2725fd745eb1014bb.png"}}]);